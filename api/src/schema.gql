# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: ID!
  password: String!
  email: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type NoteSource {
  id: ID!
  userId: Float!
  user: User!
  name: String!
  notes: [Note!]!
}

type Tag {
  id: ID!
  userId: Float!
  user: User!
  tag: String!
  notes: [NoteTag!]!
}

type NoteTag {
  id: ID!
  userId: Float!
  user: User!
  noteId: Float!
  note: Note!
  tagId: Float!
  tag: Tag!
}

type Note {
  id: ID!
  userId: Float!
  user: User!
  sourceId: Float!
  source: NoteSource!
  position: String!
  company: String!
  link: String!
  description: String
  status: String!
  tags: [NoteTag!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type NotesPaginationResponse {
  """List of notes"""
  notes: [Note!]!

  """Total number of items"""
  totalItems: Int

  """Total number of pages"""
  totalPages: Int

  """Current page number"""
  currentPage: Int

  """Number of items per page"""
  limit: Int

  """Previous page number"""
  prevPage: Int

  """Next page number"""
  nextPage: Int
}

type NoteStatusStatisticResponse {
  ALL: Int!
  ACCEPTED: Int!
  REJECTED: Int!
  CONSIDERED: Int!
  SENT: Int!
  TEST_TASK: Int!
  INTERVIEW: Int!
}

type AuthResponse {
  """JWT access token"""
  accessToken: String!

  """JWT refresh token"""
  refreshToken: String!
}

type NoteSourceStatisticResponse {
  id: ID!
  name: String!
  ACCEPTED: Int!
  REJECTED: Int!
  CONSIDERED: Int!
  SENT: Int!
  TEST_TASK: Int!
  INTERVIEW: Int!
}

type NoteStatusHistory {
  id: ID!
  userId: Float!
  user: User!
  noteId: Float!
  note: Note!
  status: String!
  description: String
  createdAt: DateTime!
}

type Query {
  notes(getNotesArgs: GetNotesArgs!): NotesPaginationResponse!
  note(id: Int!): Note!
  statusStatistic: NoteStatusStatisticResponse!
  sources: [NoteSource!]!
  sourcesStatistic: [NoteSourceStatisticResponse!]!
  tags: [Tag!]!
  statusesHistory(noteId: Int!): [NoteStatusHistory!]!
}

input GetNotesArgs {
  """Page"""
  page: Int

  """Limit"""
  limit: Int

  """Sort"""
  sort: String

  """Status"""
  status: String

  """Search"""
  search: String
}

type Mutation {
  createNote(createNoteInput: CreateNoteInput!): Note!
  updateNote(updateNoteInput: UpdateNoteInput!): Note!
  removeNote(id: Int!): Note!
  register(authInput: AuthInput!): AuthResponse!
  login(authInput: AuthInput!): AuthResponse!
  refresh(refreshInput: RefreshInput!): AuthResponse!
}

input CreateNoteInput {
  """Note position"""
  position: String!

  """Note company"""
  company: String!

  """Note link"""
  link: String!

  """Note description"""
  description: String

  """Note source"""
  source: String!

  """Note status"""
  status: String

  """Note created at"""
  createdAt: DateTime

  """Note tags"""
  tags: [String!]
}

input UpdateNoteInput {
  """Note position"""
  position: String

  """Note company"""
  company: String

  """Note link"""
  link: String

  """Note description"""
  description: String

  """Note source"""
  source: String

  """Note status"""
  status: String

  """Note created at"""
  createdAt: DateTime

  """Note tags"""
  tags: [String!]
  id: Int!
}

input AuthInput {
  """Email"""
  email: String!

  """Password"""
  password: String!
}

input RefreshInput {
  """JWT refresh token"""
  refreshToken: String!
}